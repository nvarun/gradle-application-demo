name: Gradle CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: 
      - master
    paths:
      - '.github/**'
      - 'app-*/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  checkout:
    name: Checkout
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1.0.3
      - name: Gradle Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Publish Artifacts
        uses: actions/upload-artifact@v2.2.3
        with:
          name: repo-clone
          path: ${{ github.workspace }}
      
  build_app_java:
    name: Gradle App Demo - Java
    needs: checkout
    runs-on: ubuntu-20.04
    steps:
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v2.0.9
        with:
          name: repo-clone
      - name: Build Artifacts
        run: chmod u+x gradlew && ./gradlew :app-java:build
      - name: Execute Main Class
        run: ./gradlew :app-java:run

  build_app_scala:
    name: Gradle App Demo - Scala
    needs: checkout
    runs-on: ubuntu-20.04
    steps:
      - name: Retrieve Artifacts
        uses: actions/download-artifact@v2.0.9
        with:
          name: repo-clone
      - name: Build Artifacts
        run: chmod u+x gradlew && ./gradlew :app-scala:build
      - name: Execute Main Class
        run: ./gradlew :app-scala:run

   cleanup_cache:
     needs: [build_app_java, build_app_scala]
     runs-on: ubuntu-20.04
     steps:
       - name: 'Cleanup Cache'
         run: |
           rm -f ~/.gradle/caches/modules-2/modules-2.lock
           rm -f ~/.gradle/caches/modules-2/gc.properties

